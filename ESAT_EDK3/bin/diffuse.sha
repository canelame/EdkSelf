#version 330

layout(location = 0) in vec3 a_position;
layout(location = 1) in vec3 a_normal;

uniform mat4 u_model_matrix;
uniform mat4 u_view_matrix;
uniform mat4 u_projection_matrix;

vec3 u_lightPosition = vec3(0,0,100);
vec3 u_cameraPosition = -(u_view_matrix[3].xyz);

out vec3 o_normal;
out vec3 o_toLight;
out vec3 o_toCamera;

void main() {
   vec4 world_position = u_model_matrix * vec4(a_position, 1);
    o_normal =vec3(normalize(u_model_matrix*vec4(a_normal,0)));
    o_toLight= normalize(u_lightPosition-world_position.xyz);
    o_toCamera = normalize(u_cameraPosition-world_position.xyz);
    gl_Position=u_projection_matrix*u_view_matrix*world_position;
}